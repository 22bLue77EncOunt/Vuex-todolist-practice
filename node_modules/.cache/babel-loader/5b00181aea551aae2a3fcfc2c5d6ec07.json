{"remainingRequest":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/babel-loader/lib/index.js!/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/src/components/Todos.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/src/components/Todos.vue","mtime":1556815517712},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"Todos\",\n  methods: _objectSpread({}, mapActions([\"fetchTodos\", \"deleteTodo\", \"updateTodo\"]), {\n    onDblClick: function onDblClick(todo) {\n      var updTodo = {\n        id: todo.id,\n        title: todo.title,\n        completed: !todo.completed\n      };\n      this.updateTodo(updTodo);\n    }\n  }),\n  computed: mapGetters([\"allTodos\"]),\n  created: function created() {\n    this.fetchTodos();\n  }\n};",{"version":3,"sources":["Todos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,SAAA,UAAA,EAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,OAAA,oBACA,UAAA,CAAA,CAAA,YAAA,EAAA,YAAA,EAAA,YAAA,CAAA,CADA;AAEA,IAAA,UAFA,sBAEA,IAFA,EAEA;AACA,UAAA,OAAA,GAAA;AACA,QAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,QAAA,KAAA,EAAA,IAAA,CAAA,KAFA;AAGA,QAAA,SAAA,EAAA,CAAA,IAAA,CAAA;AAHA,OAAA;AAKA,WAAA,UAAA,CAAA,OAAA;AACA;AATA,IAFA;AAaA,EAAA,QAAA,EAAA,UAAA,CAAA,CAAA,UAAA,CAAA,CAbA;AAcA,EAAA,OAdA,qBAcA;AACA,SAAA,UAAA;AACA;AAhBA,CAAA","sourcesContent":["<template>\n    <div>\n        <h1>待辦事項</h1>\n        <div class=\"legend\">\n            <span>雙擊標示完成</span>\n            <span>\n                <span class=\"incomplete-box\"></span> = 未完成\n            </span>\n            <span>\n                <span class=\"complete-box\"> </span>= 完成\n            </span>\n        </div>\n        <div class=\"todos\">\n            <div @dbclick=\"onDbClick(todo)\"\n                 v-for=\"todo in allTodos\"\n                 :key=\"todo.id\"\n                 class=\"todo\"\n                 :class=\"{'is-complete':todo.completed}\">\n                {{todo.title}}\n                <i @click=\"deleteTodo(todo.id)\"\n                   class=\"fas fa-trash-alt\"></i>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\nexport default {\n  name: \"Todos\",\n  methods: {\n    ...mapActions([\"fetchTodos\", \"deleteTodo\", \"updateTodo\"]),\n    onDblClick(todo) {\n      const updTodo = {\n        id: todo.id,\n        title: todo.title,\n        completed: !todo.completed\n      };\n      this.updateTodo(updTodo);\n    }\n  },\n  computed: mapGetters([\"allTodos\"]),\n  created() {\n    this.fetchTodos();\n  }\n};\n</script>\n\n<style scoped>\n.todos {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n}\n.todo {\n  border: 1px solid #ccc;\n  background: #41b883;\n  padding: 1rem;\n  border-radius: 5px;\n  text-align: center;\n  position: relative;\n  cursor: pointer;\n}\ni {\n  position: absolute;\n  bottom: 10px;\n  right: 10px;\n  color: #fff;\n  cursor: pointer;\n}\n.legend {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 1rem;\n}\n.complete-box {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  background: #35495e;\n}\n.incomplete-box {\n  display: inline-block;\n  width: 10px;\n  height: 10px;\n  background: #41b883;\n}\n.is-complete {\n  background: #35495e;\n  color: #fff;\n}\n@media (max-width: 500px) {\n  .todos {\n    grid-template-columns: 1fr;\n  }\n}\n</style>"],"sourceRoot":"src/components"}]}