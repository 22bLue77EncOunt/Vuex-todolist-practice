{"remainingRequest":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/babel-loader/lib/index.js!/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/eslint-loader/index.js??ref--13-0!/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/src/store/modules/todo.js","dependencies":[{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/src/store/modules/todo.js","mtime":1556814834011},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _parseInt from \"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nvar state = {\n  todos: []\n};\nvar getters = {\n  allTodos: function allTodos(state) {\n    return state.todos;\n  }\n};\nvar actions = {\n  fecthTodos: function () {\n    var _fecthTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get('https://jsonplaceholder.typicode.com/todos');\n\n            case 3:\n              response = _context.sent;\n              commit('setTodos', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fecthTodos(_x) {\n      return _fecthTodos.apply(this, arguments);\n    }\n\n    return fecthTodos;\n  }(),\n  addTodo: function () {\n    var _addTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, title) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post('https://jsonplaceholder.typicode.com/todos', {\n                title: title,\n                completed: false\n              });\n\n            case 3:\n              response = _context2.sent;\n              commit('newTodo', response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addTodo(_x2, _x3) {\n      return _addTodo.apply(this, arguments);\n    }\n\n    return addTodo;\n  }(),\n  deleteTodo: function () {\n    var _deleteTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.delete(\"https://jsonplaceholder.typicode.com/todos/\".concat(id));\n\n            case 3:\n              commit('removeTodo', id);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteTodo(_x4, _x5) {\n      return _deleteTodo.apply(this, arguments);\n    }\n\n    return deleteTodo;\n  }(),\n  filterTodos: function () {\n    var _filterTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, e) {\n      var commit, limit, reponse;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              limit = _parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n              _context4.next = 4;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=\".concat(limit));\n\n            case 4:\n              reponse = _context4.sent;\n              commit('setTodos', reponse.data);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filterTodos(_x6, _x7) {\n      return _filterTodos.apply(this, arguments);\n    }\n\n    return filterTodos;\n  }(),\n  updateTodo: function () {\n    var _updateTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5, updTodo) {\n      var commit, reponse;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.put(\"https://jsonplaceholder.typicode.com/todos/\".concat(updTodo.id), updTodo);\n\n            case 3:\n              reponse = _context5.sent;\n              commit('updateTodo', reponse.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateTodo(_x8, _x9) {\n      return _updateTodo.apply(this, arguments);\n    }\n\n    return updateTodo;\n  }()\n};\nvar mutations = {\n  setTodos: function setTodos(state, todos) {\n    return state.todos = todos;\n  },\n  newTodo: function newTodo(state, todo) {\n    return state.todos.unshift(todo);\n  },\n  removeTodo: function removeTodo(state, id) {\n    return state.todos = state.todos.filter(function (todo) {\n      return todo.id != id;\n    });\n  },\n  updateTodo: function updateTodo(state, updTodo) {\n    var index = state.todos.findIndex(function (todo) {\n      return todo.id === updTodo.id;\n    });\n\n    if (index != -1) {\n      state.todos.splice(index, 1, updTodo);\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/BenS/code/Vue.js/Vue.30/vuex-todolist/src/store/modules/todo.js"],"names":["axios","state","todos","getters","allTodos","actions","fecthTodos","commit","get","response","data","addTodo","title","post","completed","deleteTodo","id","delete","filterTodos","e","limit","target","options","selectedIndex","innerText","reponse","updateTodo","updTodo","put","mutations","setTodos","newTodo","todo","unshift","removeTodo","filter","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst state = {\n    todos: []\n};\n\nconst getters = {\n    allTodos: (state) => state.todos\n};\n\nconst actions = {\n    async fecthTodos({\n        commit\n    }) {\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos');\n        commit('setTodos', response.data);\n    },\n    async addTodo({\n        commit\n    }, title) {\n        const response = await axios.post('https://jsonplaceholder.typicode.com/todos', {\n            title,\n            completed: false\n        });\n        commit('newTodo', response.data);\n    },\n    async deleteTodo({\n        commit\n    }, id) {\n        await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n        commit('removeTodo', id);\n    },\n    async filterTodos({\n        commit\n    }, e) {\n        const limit = parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n\n        const reponse = await axios.get(`https://jsonplaceholder.typicode.com/todos?_limit=${limit}`);\n\n        commit('setTodos', reponse.data);\n    },\n    async updateTodo({\n        commit\n    }, updTodo) {\n        const reponse = await axios.put(`https://jsonplaceholder.typicode.com/todos/${updTodo.id}`, updTodo);\n        commit('updateTodo', reponse.data);\n    }\n};\n\nconst mutations = {\n    setTodos: (state, todos) => (state.todos = todos),\n    newTodo: (state, todo) => state.todos.unshift(todo),\n    removeTodo: (state, id) => state.todos = state.todos.filter(todo => todo.id != id),\n    updateTodo: (state, updTodo) => {\n        const index = state.todos.findIndex(todo => todo.id === updTodo.id);\n        if (index != -1) {\n            state.todos.splice(index, 1, updTodo);\n        }\n    }\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}