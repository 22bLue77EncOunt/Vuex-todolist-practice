{"remainingRequest":"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/babel-loader/lib/index.js!/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/eslint-loader/index.js??ref--13-0!/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/src/store/modules/todos.js","dependencies":[{"path":"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/src/store/modules/todos.js","mtime":1558447507236},{"path":"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport _parseInt from \"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport axios from 'axios'; //資料狀態\n\nvar state = {\n  todos: []\n};\nvar getters = {\n  allTodos: function allTodos(state) {\n    return state.todos;\n  }\n}; //\n\nvar actions = {\n  fetchTodos: function () {\n    var _fetchTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return axios.get('https://jsonplaceholder.typicode.com/todos');\n\n            case 3:\n              response = _context.sent;\n              commit('setTodos', response.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function fetchTodos(_x) {\n      return _fetchTodos.apply(this, arguments);\n    }\n\n    return fetchTodos;\n  }(),\n  addTodo: function () {\n    var _addTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2(_ref2, title) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return axios.post('https://jsonplaceholder.typicode.com/todos', {\n                title: title,\n                completed: false\n              });\n\n            case 3:\n              response = _context2.sent;\n              commit('newTodo', response.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addTodo(_x2, _x3) {\n      return _addTodo.apply(this, arguments);\n    }\n\n    return addTodo;\n  }(),\n  deleteTodo: function () {\n    var _deleteTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee3(_ref3, id) {\n      var commit;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return axios.delete(\"https://jsonplaceholder.typicode.com/todos/\".concat(id));\n\n            case 3:\n              commit('removeTodo', id);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function deleteTodo(_x4, _x5) {\n      return _deleteTodo.apply(this, arguments);\n    }\n\n    return deleteTodo;\n  }(),\n  filterTodos: function () {\n    var _filterTodos = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee4(_ref4, e) {\n      var commit, limit, response;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              // Get selected number\n              limit = _parseInt(e.target.options[e.target.options.selectedIndex].innerText);\n              _context4.next = 4;\n              return axios.get(\"https://jsonplaceholder.typicode.com/todos?_limit=\".concat(limit));\n\n            case 4:\n              response = _context4.sent;\n              commit('setTodos', response.data);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function filterTodos(_x6, _x7) {\n      return _filterTodos.apply(this, arguments);\n    }\n\n    return filterTodos;\n  }(),\n  updateTodo: function () {\n    var _updateTodo = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee5(_ref5, updTodo) {\n      var commit, response;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return axios.put(\"https://jsonplaceholder.typicode.com/todos/\".concat(updTodo.id), updTodo);\n\n            case 3:\n              response = _context5.sent;\n              commit('updateTodo', response.data);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function updateTodo(_x8, _x9) {\n      return _updateTodo.apply(this, arguments);\n    }\n\n    return updateTodo;\n  }()\n}; //狀態\n\nvar mutations = {\n  setTodos: function setTodos(state, todos) {\n    return state.todos = todos;\n  },\n  newTodo: function newTodo(state, todo) {\n    return state.todos.unshift(todo);\n  },\n  removeTodo: function removeTodo(state, id) {\n    return state.todos = state.todos.filter(function (todo) {\n      return todo.id !== id;\n    });\n  },\n  updateTodo: function updateTodo(state, updTodo) {\n    var index = state.todos.findIndex(function (todo) {\n      return todo.id === updTodo.id;\n    });\n\n    if (index !== -1) {\n      state.todos.splice(index, 1, updTodo);\n    }\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/Users/BenS/code/Vue.js/Vue-project/vuex-todolist/src/store/modules/todos.js"],"names":["axios","state","todos","getters","allTodos","actions","fetchTodos","commit","get","response","data","addTodo","title","post","completed","deleteTodo","id","delete","filterTodos","e","limit","target","options","selectedIndex","innerText","updateTodo","updTodo","put","mutations","setTodos","newTodo","todo","unshift","removeTodo","filter","index","findIndex","splice"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\n//資料狀態\nconst state = {\n    todos: []\n};\n\nconst getters = {\n    allTodos: state => state.todos\n};\n\n//\nconst actions = {\n    async fetchTodos({\n        commit\n    }) {\n        const response = await axios.get(\n            'https://jsonplaceholder.typicode.com/todos'\n        );\n\n        commit('setTodos', response.data);\n    },\n    async addTodo({\n        commit\n    }, title) {\n        const response = await axios.post(\n            'https://jsonplaceholder.typicode.com/todos', {\n                title,\n                completed: false\n            }\n        );\n\n        commit('newTodo', response.data);\n    },\n    async deleteTodo({\n        commit\n    }, id) {\n        await axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`);\n\n        commit('removeTodo', id);\n    },\n    async filterTodos({\n        commit\n    }, e) {\n        // Get selected number\n        const limit = parseInt(\n            e.target.options[e.target.options.selectedIndex].innerText\n        );\n\n        const response = await axios.get(\n            `https://jsonplaceholder.typicode.com/todos?_limit=${limit}`\n        );\n\n        commit('setTodos', response.data);\n    },\n    async updateTodo({\n        commit\n    }, updTodo) {\n        const response = await axios.put(\n            `https://jsonplaceholder.typicode.com/todos/${updTodo.id}`,\n            updTodo\n        );\n        commit('updateTodo', response.data);\n    }\n};\n\n//狀態\nconst mutations = {\n    setTodos: (state, todos) => (state.todos = todos),\n    newTodo: (state, todo) => state.todos.unshift(todo),\n    removeTodo: (state, id) =>\n        (state.todos = state.todos.filter(todo => todo.id !== id)),\n    updateTodo: (state, updTodo) => {\n        const index = state.todos.findIndex(todo => todo.id === updTodo.id);\n        if (index !== -1) {\n            state.todos.splice(index, 1, updTodo);\n        }\n    }\n};\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations\n};"]}]}